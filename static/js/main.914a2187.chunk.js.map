{"version":3,"sources":["components/UI/ModalMail/ModalMail.module.scss","components/UI/Modal/Modal.module.scss","components/ComicCard/ComicCard.module.scss","components/CardList/CardList.module.scss","components/UI/Alert/Alert.module.css","components/Header/Header.module.scss","components/UI/Checkbox/Checkbox.module.scss","components/MainContent/MainContent.module.scss","components/Form/Form.module.scss","components/Footer/Footer.module.scss","components/UI/Button/Button.module.scss","components/UI/Loader/Loader.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/UI/SocialMediaList/SocialMediaList.module.scss","components/SendEmailButton/SendEmailButton.module.scss","utils/Project.js","context/Project.js","services/MarvelApi.js","components/UI/Logo/marvel.svg","components/UI/Logo/Logo.js","components/Header/Header.js","components/MainContent/MainContent.js","components/Form/Form.js","components/Footer/Footer.js","components/UI/Button/Button.js","components/UI/Checkbox/Checkbox.js","utils/Utils.js","components/ComicCard/ComicCard.js","components/UI/Loader/Loader.js","components/UI/Alert/Alert.js","components/UI/Backdrop/Backdrop.js","components/CardList/CardList.js","components/UI/Modal/Modal.js","components/UI/SocialMediaLink/SocialMediaLink.js","components/UI/SocialMediaList/SocialMediaList.js","utils/Mailer.js","components/UI/ModalMail/ModalMail.js","components/SendEmailButton/SendEmailButton.js","container/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PROJECT","author","title","emailJs","serviceId","templateId","userId","replyTo","projectContext","React","createContext","selectedCards","MarvelAPI","this","publicKey","baseURL","axiosInstance","axios","create","params","get","then","response","data","offset","callback","titleSearch","comicId","logo","props","inheritedClasses","classes","join","src","marvelLogo","alt","className","Header","useContext","ProjectContext","HeaderCSS","Container","Logo","Challenge","ChallengeTitle","mainContent","MainContentCSS","children","form","FormCSS","id","type","onChange","changed","placeholder","onClick","submited","footer","FooterCSS","Main","button","ButtonCSS","Style","push","checkbox","CheckboxCSS","label","checked","Checkmark","formatDate","datetime","date","Date","day","getDate","year","getFullYear","month","getMonth","getThumbnailPath","thumbnailObject","path","extension","formatHTMLMailTemplate","selectedComics","htmlTemplate","trim","comic","tdStyle","thumbnail","format","pageCount","description","ComicCard","isInputChecked","findIndex","el","ComicCardCSS","Card","onMouseEnter","event","nodeList","document","querySelectorAll","classList","add","Fog","target","remove","onMouseLeave","ThumbnailContainer","Thumbnail","style","backgroundImage","PageCount","Checkbox","selectHandler","bind","Title","Button","showMore","loader","element","show","LoaderClass","Loader","alert","AlertClass","Alert","WithType","Icon","Content","backdrop","visible","backdropClass","Wrapper","clicked","cardList","comics","CardListCSS","Feedback","lazyLoading","Backdrop","LazyLoadContainer","loading","length","map","clickedComic","Grid","Modal","renderModalBody","diamondCode","digitalId","isbn","modified","urls","creators","items","onSaleDate","dates","focDate","price","prices","parseComicDetail","listaLinks","url","href","rel","ModalClass","URLButton","readMarvelURL","DigitalIssue","Detail","Text","ComicTitle","ComicDescription","ComicPrice","URLArea","containerClasses","Animation","buttonLabel","buttonSelect","selected","closed","CloseButton","Body","Footer","Cancel","Component","socialMediaLink","iconClass","icon","to","external","socialMediaList","list","socialMediaProps","index","SocialMediaLink","name","SocialMediaListCSS","Mailer","templateParams","Project","callbackSuccess","callbackError","emailjs","send","error","ModalMail","emailSent","List","ListDefault","sendToInput","selectedComicsList","RemoveComic","removed","Form","SendToInput","sendToChanged","value","sendTo","sendEmailButton","match","SendEmailButton","state","isModalOpen","isLoadingModal","clickHandler","setState","closeModalHandler","onSubmitModal","subject","message","res","cleared","onSendToChange","toLowerCase","closeModal","SendEmailButtonCSS","Layout","offsetComics","comicDetail","searchTitle","lastFetchTitle","isLoading","isLazyLoading","infiniteScroll","window","innerHeight","documentElement","scrollTop","offsetHeight","fetchComics","getComics","prevState","results","catch","err","fetchComicById","getComicById","inputChangedHandler","searchComicsHandler","preventDefault","showMoreHandler","selectComicHandler","splice","removeComicHandler","clearComics","currentYear","socialMedia","addEventListener","MainContent","Provider","CardList","SocialMediaList","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.914a2187.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"ModalMail_Container__1NVXF\",\"Animation\":\"ModalMail_Animation__2wSEt\",\"Large\":\"ModalMail_Large__2PXwC\",\"Small\":\"ModalMail_Small__IXc85\",\"Header\":\"ModalMail_Header__GlyT4\",\"Title\":\"ModalMail_Title__2tsFC\",\"CloseButton\":\"ModalMail_CloseButton__R6xDf\",\"Body\":\"ModalMail_Body__7Jj9k\",\"List\":\"ModalMail_List__3_7Q4\",\"ListDefault\":\"ModalMail_ListDefault__32hF4\",\"Thumbnail\":\"ModalMail_Thumbnail__1_9YR\",\"Text\":\"ModalMail_Text__26G8q\",\"Checkbox\":\"ModalMail_Checkbox__2R7MJ\",\"ComicTitle\":\"ModalMail_ComicTitle__2mAJ-\",\"Cancel\":\"ModalMail_Cancel__XtmVy\",\"RemoveComic\":\"ModalMail_RemoveComic__1IWJp\",\"Form\":\"ModalMail_Form__sPgEt\",\"Footer\":\"ModalMail_Footer__1Lx97\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Modal_Container__3u8uZ\",\"Animation\":\"Modal_Animation__3PGGz\",\"Header\":\"Modal_Header__CHxTQ\",\"Title\":\"Modal_Title__2aDPp\",\"CloseButton\":\"Modal_CloseButton__2R0J3\",\"Body\":\"Modal_Body__PC-MP\",\"Detail\":\"Modal_Detail__1vzaA\",\"Thumbnail\":\"Modal_Thumbnail__3hpZa\",\"Text\":\"Modal_Text__1qRfo\",\"ComicDescription\":\"Modal_ComicDescription__2S6vf\",\"ComicPrice\":\"Modal_ComicPrice__LY1_p\",\"DigitalIssue\":\"Modal_DigitalIssue__2ocfo\",\"ComicTitle\":\"Modal_ComicTitle__3WrPd\",\"Cancel\":\"Modal_Cancel__1mksA\",\"URLArea\":\"Modal_URLArea__GfCde\",\"URLButton\":\"Modal_URLButton__1TRXq\",\"Footer\":\"Modal_Footer__hwjZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"ComicCard_Card__27-cE\",\"Thumbnail\":\"ComicCard_Thumbnail__2agdT\",\"Fog\":\"ComicCard_Fog__2sai7\",\"Checkbox\":\"ComicCard_Checkbox__1sv_U\",\"ThumbnailContainer\":\"ComicCard_ThumbnailContainer__zTfIs\",\"Title\":\"ComicCard_Title__2atov\",\"PageCount\":\"ComicCard_PageCount__TmUas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Grid\":\"CardList_Grid__26cuO\",\"Feedback\":\"CardList_Feedback__2vsDH\",\"Loader\":\"CardList_Loader__1g_6m\",\"LazyLoadContainer\":\"CardList_LazyLoadContainer__22S65\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__MPlu3\",\"WithType\":\"Alert_WithType__3yVn3\",\"Content\":\"Alert_Content__3vxqK\",\"Icon\":\"Alert_Icon__3l8bZ\",\"Warning\":\"Alert_Warning__1Xt7e\",\"Danger\":\"Alert_Danger__3cc6G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Header_Logo__zXY9F\",\"Container\":\"Header_Container__WkPE-\",\"Challenge\":\"Header_Challenge__2CDwd\",\"ChallengeTitle\":\"Header_ChallengeTitle__34wJY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Checkbox_Container__W8IxR\",\"Checkmark\":\"Checkbox_Checkmark__1nmdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"MainContent_Container__3K1Oh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Form_Container__2dZ9V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Footer_Main__3jtan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Style\":\"Button_Style__1upJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__1QPQH\",\"load8\":\"Loader_load8__3-jH8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"Backdrop_Wrapper__2tJAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SocialMediaList_Container__204iG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"SendEmailButton_Button__38juc\"};","const PROJECT = {\r\n    author: 'Jean Flesch',\r\n    title: 'SoftDesign React Challenge',\r\n    emailJs: {\r\n        serviceId: '23g3lpb',\r\n        templateId: 'marvelcomic',\r\n        userId: 'user_t6yHlRRXjluyONK5MfslZ',\r\n        replyTo: 'jean.flesch93@gmail.com'\r\n    }\r\n}\r\n\r\nexport default PROJECT","import React from 'react'\r\n\r\nconst projectContext = React.createContext({\r\n    author: 'Jean Flesch',\r\n    title: 'SoftDesign React Challenge',\r\n    emailJs: {\r\n        serviceId: '23g3lpb',\r\n        templateId: 'marvelcomic',\r\n        userId: 'user_t6yHlRRXjluyONK5MfslZ',\r\n        replyTo: 'jean.flesch93@gmail.com'\r\n    },\r\n    selectedCards: []\r\n})\r\n\r\nexport default projectContext","import axios from 'axios'\r\n\r\nclass MarvelAPI {\r\n    constructor() {\r\n        this.publicKey = '9f10519dd487fe90f4db3fece4c12da0'\r\n        this.baseURL = 'https://gateway.marvel.com:443/v1/public'\r\n        this.axiosInstance = axios.create({\r\n            baseURL: this.baseURL\r\n        })\r\n    }\r\n\r\n    getCharacters (params) {\r\n        return this.axiosInstance.get(`/characters?apikey=${this.publicKey}`).then((response) => {\r\n            return response.data\r\n        })\r\n    }  \r\n\r\n    getComics (title, offset, callback) {\r\n        let titleSearch = (title) ? `titleStartsWith=${title}` : ''\r\n        offset = (offset) ? `&offset=${offset}` : ''\r\n        \r\n        return this.axiosInstance.get(`/comics?${titleSearch}&orderBy=-focDate${offset}&apikey=${this.publicKey}`).then((response) => {\r\n            return response.data\r\n        })\r\n    }  \r\n\r\n    getComicById (comicId) {\r\n        return this.axiosInstance.get(`/comics/${comicId}?apikey=${this.publicKey}`).then((response) => {\r\n            return response.data\r\n        })\r\n    }  \r\n}\r\n\r\nexport default MarvelAPI","export default __webpack_public_path__ + \"static/media/marvel.99c8a213.svg\";","import marvelLogo from './marvel.svg'\r\n\r\nconst logo = (props) => {\r\n    let inheritedClasses = []\r\n    if(props.classes) {\r\n        if(typeof props.classes === \"string\") {\r\n            inheritedClasses = props.classes\r\n        }\r\n        else {\r\n            inheritedClasses = props.classes.join(' ')\r\n        }\r\n    }\r\n\r\n    return <img src={ marvelLogo } alt=\"Marvel\" className={ inheritedClasses }/>\r\n}\r\n\r\nexport default logo","import HeaderCSS from './Header.module.scss'\r\nimport Logo from '../UI/Logo/Logo'\r\nimport ProjectContext from '../../context/Project'\r\nimport React, { useContext } from 'react'\r\n\r\nconst Header = () => {\r\n    const projectContext = useContext(ProjectContext)\r\n    \r\n    return (\r\n        <header className={ HeaderCSS.Container }>\r\n            <Logo classes={ HeaderCSS.Logo } />\r\n            <div className={ HeaderCSS.Challenge }>\r\n                <h1 className={ HeaderCSS.ChallengeTitle }>{ projectContext.title }</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import MainContentCSS from './MainContent.module.scss'\r\n\r\nconst mainContent = props => {\r\n    return (\r\n        <main className={ MainContentCSS.Container }>{ props.children }</main>\r\n    )\r\n}\r\n\r\nexport default mainContent","import FormCSS from './Form.module.scss'\r\n\r\nconst form = (props) => {\r\n    return (\r\n        <form className={ FormCSS.Container }>\r\n            <input id=\"comic-title\" type=\"text\" onChange={ props.changed } placeholder=\"Pesquisar\" />\r\n            <button onClick={ props.submited }>\r\n                <i className=\"fas fa-search\"></i>\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default form","import FooterCSS from './Footer.module.scss'\r\n\r\nconst footer = (props) => {\r\n    return (\r\n        <footer className={ FooterCSS.Main }>{ props.children }</footer>\r\n    )\r\n}\r\n\r\nexport default footer","import ButtonCSS from './Button.module.scss'\r\n\r\nconst button = (props) => {\r\n    let classes= [ButtonCSS.Style]\r\n    if(props.classes) {\r\n        if(typeof props.classes === \"string\") {\r\n            classes.push(props.classes)\r\n        }\r\n        else {\r\n            classes.push(...props.classes)\r\n        }\r\n    }\r\n    return (\r\n        <button className={ classes.join(' ') } onClick={ props.onClick }>{ props.children }</button>\r\n    )\r\n}\r\n\r\nexport default button","import CheckboxCSS from './Checkbox.module.scss'\r\n\r\nconst checkbox = (props) => {\r\n    let classes = [CheckboxCSS.Container]\r\n    if(props.className) {\r\n        classes.push(props.className)\r\n        classes = classes.join(' ')\r\n    }\r\n    return (\r\n        <label className={ classes }>\r\n            { props.label }\r\n            <input type=\"checkbox\" checked={ props.checked } onChange={ props.changed }/>\r\n            <span className={ CheckboxCSS.Checkmark } onChange={ props.changed }></span>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default checkbox","export const formatDate = (datetime) => {\r\n    const date = new Date(datetime)\r\n    const day = date.getDate()\r\n    const year = date.getFullYear()\r\n    let month = date.getMonth() \r\n    switch(month) {\r\n        case 0: \r\n            month = \"Janeiro\"\r\n            break\r\n        case 1:\r\n            month = \"Fevereiro\"\r\n            break\r\n        case 2:\r\n            month = \"Março\"\r\n            break\r\n        case 3:\r\n            month = \"Abril\"\r\n            break\r\n        case 4:\r\n            month = \"Maio\"\r\n            break\r\n        case 5:\r\n            month = \"Junho\"\r\n            break\r\n        case 6:\r\n            month = \"Julho\"\r\n            break\r\n        case 7:\r\n            month = \"Agosto\"\r\n            break\r\n        case 8:\r\n            month = \"Setembro\"\r\n            break\r\n        case 9:\r\n            month = \"Outubro\"\r\n            break\r\n        case 10:\r\n            month = \"Novembro\"\r\n            break\r\n        case 11:\r\n            month = \"Dezembro\"\r\n            break\r\n        default: break\r\n    }\r\n\r\n    return `${month} ${day}, ${year}`\r\n}\r\n\r\nexport const parseComicDetail = (comic) => {\r\n    if(comic) {\r\n        let { description, diamondCode, digitalId, format, id, isbn, modified, pageCount, title, urls } = comic\r\n        let creators    = (comic.creators) ? [...comic.creators.items] : []\r\n        let onSaleDate  = (comic.dates[0]) ? formatDate(comic.dates[0].date) : \"\"\r\n        let focDate     = (comic.dates[1]) ? formatDate(comic.dates[1].date) : \"\"\r\n        let price       = (comic.prices[0]) ? comic.prices[0].price : \"\"\r\n        let thumbnail   = `${comic.thumbnail.path}.${comic.thumbnail.extension}`\r\n        \r\n        return {\r\n            title: title,\r\n            description: description, \r\n            diamondCode: diamondCode,\r\n            digitalId: digitalId,\r\n            format: format, \r\n            id: id,\r\n            isbn: isbn,\r\n            modified: modified, \r\n            pageCount: pageCount, \r\n            creators: creators, \r\n            onSaleDate: onSaleDate,\r\n            focDate: focDate,\r\n            price: price ? `$${price}` : 'Gratuito',\r\n            thumbnail: thumbnail,\r\n            urls: urls\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport const getThumbnailPath = (thumbnailObject) => {\r\n    if(thumbnailObject) {\r\n        return `${thumbnailObject.path}.${thumbnailObject.extension}` \r\n    }\r\n\r\n    return ''\r\n}\r\n\r\nexport const formatHTMLMailTemplate = (selectedComics) => {\r\n    const tableStyle = 'border-collapse: collapse; border: 1px solid #ccc;width:100%;'\r\n    let htmlTemplate = `\r\n        <table style=\"${tableStyle}\" border=\"1\">\r\n            <thead>\r\n                <th></th>\r\n                <th>Título</th>\r\n                <th>Formato</th>\r\n                <th>Descrição</th>\r\n            </thead>\r\n            <tbody>\r\n    `.trim()\r\n\r\n    for(let comic of selectedComics) {\r\n        const tdStyle = 'vertical-align:middle;padding: 10px;'\r\n        const thumbnail = getThumbnailPath(comic.thumbnail)\r\n\r\n        htmlTemplate += `\r\n            <tr>\r\n                <td style=\"${tdStyle}\">\r\n                    <img src=\"${thumbnail}\" style=\"max-height: 150px;\" alt=\"${comic.title}\" />\r\n                </td>\r\n                <td style=\"${tdStyle}\">\r\n                    <strong>${comic.title}</strong>\r\n                </td>\r\n                <td style=\"${tdStyle}\">${comic.format} / ${comic.pageCount} páginas</td>\r\n                <td style=\"${tdStyle}\" width=\"30%\">${comic.description ? comic.description : 'Nenhuma descrição fornecida'}</td>\r\n            </tr>\r\n        `.trim()\r\n    }\r\n\r\n    htmlTemplate += `\r\n            </tbody>\r\n        </table>\r\n    `.trim()\r\n\r\n    return htmlTemplate\r\n}\r\n\r\nexport const isValidEmail = (email) => {\r\n    return email.match(/\\S+@\\S+\\.\\S+/) !== null\r\n}","import ComicCardCSS from './ComicCard.module.scss'\r\n\r\nimport { useContext } from 'react'\r\nimport Button from '../UI/Button/Button'\r\nimport Checkbox from '../UI/Checkbox/Checkbox'\r\nimport ProjectContext from '../../context/Project'\r\nimport { getThumbnailPath } from '../../utils/Utils'\r\n\r\nconst ComicCard = (props) => {\r\n    const projectContext = useContext(ProjectContext)\r\n\r\n    const onMouseOutHandler = (event) => {\r\n        const nodeList = document.querySelectorAll(`.${ComicCardCSS.Fog}`)\r\n        \r\n        for(let node of nodeList) {\r\n            node.classList.remove(ComicCardCSS.Fog)\r\n        }\r\n    }\r\n\r\n    const onMouseEnterHandler = (event) => {\r\n        const nodeList = document.querySelectorAll(`.${ComicCardCSS.Card}`)\r\n        \r\n        for(let node of nodeList) {\r\n            node.classList.add(ComicCardCSS.Fog)\r\n        }      \r\n        event.target.classList.remove(ComicCardCSS.Fog)        \r\n    }\r\n\r\n    const comicId = props.id\r\n    const thumbnail = getThumbnailPath(props.thumbnail)\r\n    let isInputChecked = false\r\n    let index = projectContext.selectedComics.findIndex(el => el.id === comicId)\t\t\r\n    if(index >= 0) {\r\n        isInputChecked = true\r\n    }\r\n\r\n    return (\r\n        <div className={ ComicCardCSS.Card } \r\n            title={ props.title }\r\n            onMouseEnter={ onMouseEnterHandler }\r\n            onMouseLeave={ onMouseOutHandler }\r\n        >\r\n            <div className= { ComicCardCSS.ThumbnailContainer }>\r\n                <div className= { ComicCardCSS.Thumbnail } style={{ backgroundImage: `url('${thumbnail}')` }}></div>\r\n                <div className={ ComicCardCSS.PageCount } >\r\n                    <span>\r\n                        <i className=\"fab fa-readme\"></i> { props.pageCount }\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <Checkbox \r\n                className={ ComicCardCSS.Checkbox } \r\n                changed={ projectContext.selectHandler.bind(this, props) } \r\n                checked={ isInputChecked }\r\n            />\r\n            <h3 className={ ComicCardCSS.Title } title={ props.title }>{ props.title }</h3>\r\n            <Button onClick={ props.showMore }>Ver mais</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicCard","import LoaderClass from './Loader.module.scss'\r\n\r\nconst loader = props => {\r\n    let element = null\r\n    if(props.show) {\r\n        element = (\r\n            <div className={ LoaderClass.Loader }></div>\r\n        )\r\n    }\r\n\r\n    return element\r\n}\r\n\r\nexport default loader","import AlertClass from './Alert.module.css'\r\n\r\nconst alert = props => {\r\n    const renderDefaultAlert = () => {\r\n        return (<div className={ classes }>{ this.props.children }</div>)\r\n    }\r\n        \r\n    const renderAlertWithType = (type) => {\r\n        return (\r\n            <div className={ classes.join(' ') }>\r\n                <div className={ AlertClass.Icon }></div>\r\n                <div className={ AlertClass.Content}>\r\n                    { props.children }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let classes = [AlertClass.Alert]\r\n    if(props.type) {\r\n        classes.push(AlertClass.WithType)\r\n        classes.push(AlertClass[props.type])\r\n\r\n        return renderAlertWithType(props.type)\r\n    }\r\n\r\n    else return renderDefaultAlert()\r\n}\r\n\r\nexport default alert","import backdropClass from './Backdrop.module.scss'\r\n\r\nconst backdrop = (props) => {\r\n    return (\r\n        <div className={ (props.visible) ? backdropClass.Wrapper : null} onClick={ props.clicked }>\r\n            { props.children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default backdrop","import CardListCSS from './CardList.module.scss'\r\nimport ComicCard from '../ComicCard/ComicCard'\r\nimport Loader from '../UI/Loader/Loader'\r\nimport Alert from '../UI/Alert/Alert'\r\nimport Backdrop from '../UI/Backdrop/Backdrop'\r\n\r\nconst cardList = (props) => {\r\n    let comics = (\r\n        <div className={ CardListCSS.Feedback } >\r\n            <p>Nenhum resultado encontrado para a pesquisa realizada.</p>\r\n        </div>\r\n    )\r\n\r\n    // Lazy Load\r\n    let lazyLoading = null\r\n    if(props.lazyLoading) {\r\n        lazyLoading = (\r\n            <Backdrop visible>\r\n                <div className={ CardListCSS.LazyLoadContainer }>\r\n                    <Loader show/>\r\n                </div>\r\n            </Backdrop>\r\n        )\r\n    }\r\n\r\n    // Loading content\r\n    if(props.loading) {\r\n        comics = (\r\n            <div className={ CardListCSS.Loader } >\r\n                <p>Carregando...</p>\r\n                <Loader show />\r\n            </div>\r\n        )\r\n    }    \r\n    // Network error\r\n    else if(props.comics === -1) {\r\n        comics = (\r\n            <div className={ CardListCSS.Feedback } >\r\n                <Alert type=\"Danger\">Erro ao acessar API da Marvel. Por favor, tente novamente</Alert>\r\n            </div>\r\n        )\r\n    }\r\n    // Render fetched content\r\n    else if(props.comics.length > 0) {\r\n        comics = props.comics.map((comic) => {\r\n            return <ComicCard\r\n                key={ comic.id }\r\n                id={ comic.id }\r\n                title={ comic.title }\r\n                pageCount={ comic.pageCount }\r\n                format={ comic.format }\r\n                description= { comic.description }\r\n                thumbnail={ comic.thumbnail }\r\n                showMore={ props.clickedComic.bind(this, comic.id) }       \r\n            />\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={ CardListCSS.Grid }>\r\n            { comics }\r\n            { lazyLoading }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default cardList","import React, { Component, Fragment } from 'react'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport Loader from './../Loader/Loader'\r\nimport Alert from './../Alert/Alert'\r\nimport Button from './../Button/Button'\r\nimport ModalClass from './Modal.module.scss'\r\nimport { parseComicDetail } from '../../../utils/Utils'\r\n\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.readMarvelURL = 'https://read.marvel.com/#/book'\r\n    }\r\n\r\n    renderModalBody = () => {\r\n        if(this.props.loading) {\r\n            return (\r\n                <Loader show />\r\n            )   \r\n        }\r\n        else if(this.props.comic === -1) {\r\n            return (\r\n                <Alert type=\"Danger\">Ops! Ocorreu um erro ao processar sua requisição. Por favor, tente novamente.</Alert>\r\n            )\r\n        }\r\n        else {\r\n            const comic = parseComicDetail(this.props.comic)\r\n\r\n            const listaLinks = comic.urls.map((url) => {\r\n                const type = url.type === \"detail\" ? \"+ Detalhes\" : \"Comprar\"\r\n                return (\r\n                    <a key={url.url} href={ url.url } target=\"_blank\" rel=\"noreferrer\" className={ ModalClass.URLButton }>{ type }</a>\r\n                )\r\n            })\r\n\r\n            let digitalId = null\r\n            if(comic.digitalId > 0) {\r\n                digitalId = (\r\n                    <a href={`${this.readMarvelURL}/${comic.digitalId}`} className={ ModalClass.DigitalIssue } target=\"_blank\" rel=\"noreferrer\">\r\n                        Disponível online\r\n                    </a>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className={ ModalClass.Detail }>\r\n                    <div className={ ModalClass.Thumbnail }>\r\n                        <img src={ comic.thumbnail } alt={ comic.title } />\r\n                    </div>\r\n                    <div className={ ModalClass.Text }>\r\n                        <h3 className={ ModalClass.ComicTitle }>{  comic.title }</h3>\r\n                        <p>{digitalId}</p>\r\n                        <p>Publicado em { comic.onSaleDate }</p>\r\n                        <p>{ comic.format } / { comic.pageCount } páginas </p>\r\n\r\n                        <p className={ ModalClass.ComicDescription }>{  comic.description ?  comic.description : 'Nenhuma descrição fornecida' }</p>\r\n                        <p className={ ModalClass.ComicPrice }>{ comic.price }</p>\r\n    \r\n\r\n                        <div className={ ModalClass.URLArea }>\r\n                            { listaLinks }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        // Handle modal show animation\r\n        let containerClasses = [ModalClass.Container]\r\n        if(this.props.visible) {\r\n            containerClasses.push(ModalClass.Animation)\r\n        }     \r\n        \r\n        let buttonLabel = \"Selecionar\"\r\n        if(this.props.comic) {\r\n            const comicId = this.props.comic.id\t\t\r\n            let index = this.props.selectedComics.findIndex(el => el.id === comicId)\t\t\r\n            \r\n            if(index >= 0) {\r\n                buttonLabel = 'Remover'\r\n            }\r\n        }\r\n        let buttonSelect = null \r\n        if(this.props.comic !== -1) (\r\n            buttonSelect = (\r\n                <Button onClick={ this.props.selected.bind(this, this.props.comic) }>\r\n                    { buttonLabel }\r\n                </Button>\r\n            )\r\n        )\r\n\r\n        return (\r\n            <Fragment>\r\n                <Backdrop visible={this.props.visible} clicked={ this.props.closed } />\r\n                \r\n                <div className={ containerClasses.join(' ') }>\r\n                    <div className={ ModalClass.Header}>\r\n                        <h3 className={ ModalClass.Title }>Informações do quadrinho</h3>\r\n                        <button className={ ModalClass.CloseButton } onClick={ this.props.closed }>&times;</button>                \r\n                    </div>\r\n                    <div className={ ModalClass.Body }>\r\n                        { this.renderModalBody() }\r\n                    </div>\r\n                    <div className={ ModalClass.Footer }>\r\n                        <Button classes={ ModalClass.Cancel } onClick={ this.props.closed }>\r\n                            Fechar\r\n                        </Button>\r\n                        { buttonSelect }\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Modal","const socialMediaLink = (props) => {\r\n    let iconClass = null\r\n    if(props.icon) {\r\n        iconClass = (\r\n            <i className={ props.icon } />\r\n        )\r\n    }\r\n    \r\n    return (\r\n        <a href={ props.to } target={props.external ? '_blank' : ''} rel='noreferrer'>\r\n            { iconClass } { props.children }\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default socialMediaLink","import SocialMediaListCSS from './SocialMediaList.module.scss'\r\nimport SocialMediaLink from '../SocialMediaLink/SocialMediaLink'\r\n\r\nconst socialMediaList = (props) => {\r\n    if(props.list) {\r\n        const list = props.list.map((socialMediaProps, index) => {\r\n            return (\r\n                <li key={`${index}-${socialMediaProps.name}`}>\r\n                    <SocialMediaLink \r\n                        external\r\n                        to={ socialMediaProps.url }\r\n                        name={ socialMediaProps.name }\r\n                        icon={ socialMediaProps.icon }\r\n                    />                \r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className={ SocialMediaListCSS.Container }>{ list }</ul>\r\n        )\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nexport default socialMediaList","import emailjs from 'emailjs-com'\r\nimport Project from './Project'\r\n\r\nclass Mailer {\r\n    constructor(templateParams) {\r\n        this.serviceId = Project.emailJs.serviceId\r\n        this.templateId = Project.emailJs.templateId\r\n        this.userId = Project.emailJs.userId\r\n        this.replyTo = Project.emailJs.replyTo\r\n        this.templateParams = templateParams\r\n    }\r\n\r\n    setParams(templateParams) {\r\n        /*\r\n            subject: ..\r\n            message: ..\r\n            sendTo: ..\r\n        */\r\n        this.templateParams = templateParams\r\n    }\r\n\r\n    send(callbackSuccess, callbackError) {\r\n        return emailjs.send(\r\n            this.serviceId, \r\n            this.templateId, \r\n            this.templateParams, \r\n            this.userId\r\n        )\r\n        .then((response) => {\r\n            if(typeof callbackSuccess === \"function\") callbackSuccess(response)\r\n        }, (error) => {\r\n            if(typeof callbackError === \"function\") callbackError(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport default Mailer","import React, { Component, Fragment } from 'react'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\nimport Loader from './../Loader/Loader'\r\nimport Alert from './../Alert/Alert'\r\nimport Button from './../Button/Button'\r\nimport ModalClass from './ModalMail.module.scss'\r\nimport { getThumbnailPath, isValidEmail } from '../../../utils/Utils'\r\n\r\nclass ModalMail extends Component {\r\n    renderModalBody = () => {\r\n        if(this.props.loading) {\r\n            return (\r\n                <Loader show />\r\n            )   \r\n        }\r\n        else if(this.props.selectedComics === -1) {\r\n            return (\r\n                <Alert type=\"Danger\">Ops! Ocorreu um erro ao processar sua requisição. Por favor, tente novamente.</Alert>\r\n            )\r\n        }\r\n        else if(this.props.emailSent) {\r\n            return (\r\n                <div className={ ModalClass.Detail }>\r\n                    <ul className={ ModalClass.List }>\r\n                        <li className={ ModalClass.ListDefault }>E-mail enviado com sucesso</li>\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            // Mount comic list content\r\n            let sendToInput = null\r\n            let selectedComicsList = (\r\n                <li className={ ModalClass.ListDefault }>Nenhum quadrinho selecionado</li>\r\n            )\r\n            \r\n            if(this.props.selectedComics.length > 0) {\r\n                selectedComicsList = this.props.selectedComics.map((comic) => {\r\n                    const thumbnail = getThumbnailPath(comic.thumbnail)\r\n\r\n                    return (\r\n                        <li key={ comic.id }>\r\n                            <img src={ thumbnail } className={ ModalClass.Thumbnail } alt={ comic.title } />\r\n                            <h4 className={ ModalClass.ComicTitle }>\r\n                                { comic.title }\r\n                            </h4>\r\n                            <Button classes={ ModalClass.RemoveComic } onClick={ this.props.removed.bind(this, comic.id) }>Remover</Button>\r\n                        </li>\r\n                    )\r\n                })\r\n\r\n                sendToInput = (\r\n                    <div className={ ModalClass.Form }>\r\n                        <label>Enviar lista para</label>\r\n                        <input \r\n                            type=\"email\" \r\n                            className={ ModalClass.SendToInput } \r\n                            placeholder=\"SEU@EMAIL.COM\" \r\n                            onChange={ this.props.sendToChanged.bind(this) }\r\n                            value={ this.props.sendTo }\r\n                        />\r\n                        <i className=\"fas fa-envelope\" />\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            return (\r\n                <div className={ ModalClass.Detail }>\r\n                    { sendToInput }\r\n                    <ul className={ ModalClass.List }>\r\n                        { selectedComicsList }\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        // Handle modal show animation\r\n        let containerClasses = [ModalClass.Container]\r\n        if(this.props.visible) {\r\n            containerClasses.push(ModalClass.Animation)\r\n        }     \r\n        \r\n        let sendEmailButton = null \r\n        if(this.props.selectedComics.length > 0 && isValidEmail(this.props.sendTo)) {\r\n            sendEmailButton = (\r\n                <Button onClick={ this.props.submited }>\r\n                    Enviar email\r\n                </Button>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Backdrop visible={this.props.visible} clicked={ this.props.closed } />\r\n                \r\n                <div className={ containerClasses.join(' ') }>\r\n                    <div className={ ModalClass.Header}>\r\n                        <h3 className={ ModalClass.Title }>Quadrinhos selecionados</h3>\r\n                        <button className={ ModalClass.CloseButton } onClick={ this.props.closed }>&times;</button>                \r\n                    </div>\r\n                    <div className={ ModalClass.Body }>\r\n                        { this.renderModalBody() }\r\n                    </div>\r\n                    <div className={ ModalClass.Footer }>\r\n                        <Button classes={ ModalClass.Cancel } onClick={ this.props.closed }>\r\n                            Fechar\r\n                        </Button>\r\n                        { sendEmailButton }\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ModalMail","import SendEmailButtonCSS from './SendEmailButton.module.scss'\r\n\r\nimport { Component, Fragment } from 'react'\r\nimport Mailer from '../../utils/Mailer'\r\nimport ModalMail from '../UI/ModalMail/ModalMail'\r\nimport Backdrop from './../UI/Backdrop/Backdrop'\r\nimport { formatHTMLMailTemplate } from './../../utils/Utils'\r\n\r\nclass SendEmailButton extends Component {\r\n    state = {\r\n        isModalOpen: false,\r\n        isLoadingModal: false,\r\n        emailSent: false,\r\n        sendToInput: \"\"\r\n    }\r\n\r\n    clickHandler = () =>{\r\n        this.setState({ \r\n            isModalOpen: true,\r\n            emailSent: false\r\n        })\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({ isModalOpen: false })\r\n    }\r\n\r\n    onSubmitModal = () => {\r\n        this.setState({ \r\n            isLoadingModal: true,\r\n            sendToInput: \"\" \r\n        })\r\n\r\n        // Enviar email\r\n        const mailerInstance = new Mailer({\r\n            subject: 'Sua lista de quadrinhos Marvel',\r\n            message: formatHTMLMailTemplate(this.props.selectedComics),\r\n            sendTo: this.state.sendToInput\r\n        })\r\n\r\n        mailerInstance.send((res) => {\r\n            this.setState({ \r\n                emailSent: true,\r\n                isLoadingModal: false\r\n            })\r\n            this.props.cleared()\r\n        })\r\n    }\r\n\r\n    onSendToChange = (event) => {\r\n        let { value } = event.target\r\n        if(value) value = value.toLowerCase()\r\n        \r\n        this.setState({ sendToInput: value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Backdrop visible={ this.state.isModalOpen } clicked={ this.closeModal } />\r\n\r\n                <ModalMail \r\n                    visible={ this.state.isModalOpen }\r\n\t\t\t\t\tremoved={ this.props.removed.bind(this) }\r\n\t\t\t\t\tclosed={ this.closeModalHandler.bind(this) }\r\n\t\t\t\t\tloading={ this.state.isLoadingModal }\r\n\t\t\t\t\tselectedComics={ this.props.selectedComics }\r\n                    submited={ this.onSubmitModal.bind(this) }\r\n                    sendTo={ this.state.sendToInput }\r\n                    sendToChanged={ this.onSendToChange.bind(this) }\r\n                    emailSent={ this.state.emailSent }\r\n                />\r\n\r\n                <button className={ SendEmailButtonCSS.Button } onClick={ this.clickHandler }>\r\n                    <i className=\"fas fa-paper-plane\"></i>\r\n                </button>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SendEmailButton","import React, { Component, Fragment } from 'react'\r\nimport Project from '../utils/Project'\r\nimport ProjectContext from '../context/Project'\r\nimport MarvelAPI from '../services/MarvelApi'\r\nimport Header from '../components/Header/Header'\r\nimport MainContent from '../components/MainContent/MainContent'\r\nimport Form from '../components/Form/Form'\r\nimport Footer from '../components/Footer/Footer'\r\nimport CardList from '../components/CardList/CardList'\r\nimport Modal from '../components/UI/Modal/Modal'\r\nimport SocialMediaList from '../components/UI/SocialMediaList/SocialMediaList'\r\nimport SendEmailButton from '../components/SendEmailButton/SendEmailButton'\r\n\r\nclass Layout extends Component {\r\n    constructor(props) {\r\n        super(props) \r\n\t\tthis.currentYear = new Date().getFullYear()\r\n\t\tthis.socialMedia = [\r\n\t\t\t{\r\n\t\t\t\tname: \"LinkedIn\",\r\n\t\t\t\turl: \"https://www.linkedin.com/in/jean-flesch-19a189104/\",\r\n\t\t\t\ticon: \"fab fa-linkedin\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"GitHub\",\r\n\t\t\t\turl: \"https://github.com/jaflesch\",\r\n\t\t\t\ticon: \"fab fa-github\"\r\n\t\t\t}\r\n\t\t]\r\n    }\r\n\t\r\n    state = {\r\n\t\tcomics: [],\r\n\t\toffsetComics: 0,\r\n\t\tcomicDetail: null,\r\n\t\tsearchTitle: \"\",\r\n\t\tlastFetchTitle: \"\",\r\n\t\tisLoading: false,\r\n\t\tisModalOpen: false,\r\n\t\tisLoadingModal: true,\r\n\t\tisLazyLoading: false,\r\n\t\tselectedComics: []\r\n\t}\r\n\r\n    componentDidMount() {\r\n\t\tthis.setState({ isLoading: true })\r\n\t\tthis.fetchComics()\r\n\t\twindow.addEventListener('scroll', this.infiniteScroll);\r\n    }\r\n    \r\n\tinfiniteScroll = () => {\r\n\t\tif (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\t\r\n\t\t\tthis.setState({ isLazyLoading: true })\t\r\n\t\t\tthis.fetchComics(this.state.searchTitle)\r\n\t\t}\r\n\t}\r\n\r\n    // Fetch data\r\n\tfetchComics = (title) => {\r\n\t\tconst offsetComics = (this.state.lastFetchTitle === this.state.searchTitle) ? this.state.comics.length : 0\t\t\t\t\r\n\t\t\r\n\t\tlet marvelAPIInstance = new MarvelAPI()\t\t\r\n\t\tmarvelAPIInstance.getComics(title, offsetComics).then((response) => {\t\t\t\r\n\t\t\tthis.setState((prevState) => ({\r\n\t\t\t\tcomics: [...prevState.comics, ...response.data.results],\r\n\t\t\t\toffsetComics: offsetComics,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisLazyLoading: false\r\n\t\t\t}))\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcomics: -1,\r\n\t\t\t\toffsetComics: 0,\r\n\t\t\t\tselectedComics: -1,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tisLazyLoading: false\r\n\t\t\t})\r\n\t\t})\t\r\n\t}\r\n\r\n\tfetchComicById = (id) => {\r\n\t\tlet marvelAPIInstance = new MarvelAPI()\r\n\r\n\t\tmarvelAPIInstance.getComicById(id).then((response) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcomicDetail: response.data.results[0],\r\n\t\t\t\tisLoadingModal: false\r\n\t\t\t})\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcomicDetail: -1,\r\n\t\t\t\tisLoadingModal: false\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n    // Handler\r\n\tinputChangedHandler = (event) => {\r\n\t\tthis.setState({\r\n\t\t\tsearchTitle: event.target.value\r\n\t\t})\r\n\t}\r\n\r\n\tsearchComicsHandler = (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tthis.setState({ \r\n\t\t\tcomics: [],\r\n\t\t\tisLoading: true,\r\n\t\t\toffsetComics: 0,\r\n\t\t\tlastFetchTitle: this.state.searchTitle\r\n\t\t})\r\n\t\tthis.fetchComics(this.state.searchTitle)\r\n\t}\r\n\r\n\tshowMoreHandler = (id) => {\r\n\t\tthis.setState({ \r\n\t\t\tisModalOpen: true,\r\n\t\t\tisLoadingModal: true\r\n\t\t })     \r\n\t\tthis.fetchComicById(id)\r\n\t}\r\n\t\r\n\tcloseModalHandler = () => {\r\n\t\tthis.setState({ isModalOpen: false })\r\n\t}\r\n\t\r\n\tselectComicHandler = (comic) => {\r\n\t\tconst comicId = comic.id\r\n\t\tconst selectedComics = [...this.state.selectedComics]\r\n\t\tlet index = selectedComics.findIndex(el => el.id === comicId)\t\t\r\n\t\tif(index === -1) {\r\n\t\t\tselectedComics.push(comic)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tselectedComics.splice(index, 1)\r\n\t\t}\r\n\r\n\t\tthis.setState({ selectedComics: selectedComics })\r\n\t}\r\n\r\n\tremoveComicHandler = (comicId) => {\r\n\t\tconst selectedComics = [...this.state.selectedComics]\r\n\t\tlet index = selectedComics.findIndex(el => el.id === comicId)\t\t\r\n\t\tif(index >= 0) {\r\n\t\t\tselectedComics.splice(index, 1)\r\n\t\t}\r\n\r\n\t\tthis.setState({ selectedComics: selectedComics })\r\n\t}\r\n\r\n\tclearComics = () => {\r\n\t\tthis.setState({ selectedComics: []})\r\n\t}\r\n    \r\n    render() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Modal \r\n\t\t\t\t\tvisible={ this.state.isModalOpen }\r\n\t\t\t\t\tselected={ this.selectComicHandler.bind(this) }\r\n\t\t\t\t\tclosed={ this.closeModalHandler.bind(this) }\r\n\t\t\t\t\tcomic={ this.state.comicDetail }\r\n\t\t\t\t\tloading={ this.state.isLoadingModal }\r\n\t\t\t\t\tselectedComics={ this.state.selectedComics }\r\n\t\t\t\t/>\r\n                <Header />\r\n\t\t\t\t\r\n\t\t\t\t<MainContent>\r\n\t\t\t\t\t<Form\r\n\t\t\t\t\t\tchanged={ this.inputChangedHandler }\r\n\t\t\t\t\t\tsubmited={ this.searchComicsHandler }\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<ProjectContext.Provider value={{\r\n\t\t\t\t\t\tselectedComics: this.state.selectedComics,\r\n\t\t\t\t\t\tselectHandler: this.selectComicHandler.bind(this)\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<CardList \r\n\t\t\t\t\t\t\tcomics={ this.state.comics } \r\n\t\t\t\t\t\t\tclickedComic={ this.showMoreHandler }\r\n\t\t\t\t\t\t\tloading={ this.state.isLoading }\r\n\t\t\t\t\t\t\tlazyLoading={ this.state.isLazyLoading }\r\n\t\t\t\t\t\t/>\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t<SendEmailButton \r\n\t\t\t\t\t\t\tvisible={ this.state.isModalOpen }\r\n\t\t\t\t\t\t\tclosed={ this.closeModalHandler.bind(this) }\r\n\t\t\t\t\t\t\tremoved={ this.removeComicHandler.bind(this) }\r\n\t\t\t\t\t\t\tselectedComics={ this.state.selectedComics }\r\n\t\t\t\t\t\t\tcleared={ this.clearComics }\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ProjectContext.Provider>\r\n\t\t\t\t\t\r\n\t\t\t\t</MainContent>\r\n\r\n                <Footer>\r\n\t\t\t\t\t<SocialMediaList list={ this.socialMedia } />\r\n\t\t\t\t\t<p>&copy;{ this.currentYear } { Project.author }</p>\r\n\t\t\t\t</Footer>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n    }\r\n}\r\n\r\nexport default Layout","import './App.css';\nimport Layout from './container/Layout'\n\nconst App = () => {\n\treturn (\n\t\t<Layout />\n\t) \n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}